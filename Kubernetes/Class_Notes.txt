		
***********************
Day 16 - 2nd Oct. 2023 
***********************	

		Kubernetes ::
			Kubernetes Architecture :
				Kubernetes_Master	#It is used to create the Deployment objects and schedule the deployments
					Kubernetes_WorkerNode1	# It is used to actually run the applications
					Kubernetes_WorkerNode2
					Kubernetes_WorkerNode3
					Kubernetes_WorkerNode4
			
			Kubernetes_Cluster ::
					==> It is a collection of Kubernetes_WorkerNodes
					
			Terminologies :::
			
				Image 
				Container 
				Container Registry 
				Repositories 
				Pods
				Cluster 
				Services 
				
			Core Concepts :
			
				PODs
				Controller Objects 
					Replication Controller 
					Replicasets
					Daemonset 
					Deployments 
				Services 
					ClusterIP
					NodePort
					LoadBalancer
				Volumes 
				Namespaces
				
				
			Kubernetes is the open-source container Orchestration Tool.	

			Managed Services :::
				AWS ==> EKS 
				Az  ==> AKS 
				GCP ==> GKS 
				
			
			Kubernetes Architecture :::
			
				Kubernetes_Master :
					Kubernetes_WorkerNode1
					Kubernetes_WorkerNode2
					
					
			Terminologies :::
			Core Concepts :
			
				PODs
				kubectl 	==> It is used to interact with Kubernetes Master.
				kubeadm		==> It is a command line utility to install and config. Kubernetes_Master & Kubernetes_WorkerNodes
				
				
				
				Controller Objects 
					Replication Controller 
					Replicasets
					Daemonset 
					Deployments 
				Services 
					ClusterIP
					NodePort
					LoadBalancer
				Volumes 
				Namespaces


			Installation of Kubernetes::::
			
					1. Launch the required no. of VMs - 
					
					Should be executed in all the nodes:
						2. Configure the Node Names 
						3. Install Docker 
						4. Container Runtime Interfaces - CRI - ContainerD
						5. Start ContainerD 
						6. Install Kubeadm,kubectl,kubelet
						
					Should be executed only in master nodes:	
						7. Initialize Kubernetes Master Node using Kubeadm
					
					Should be executed only in Worker nodes:
						8. Join the WorkerNodes to Kubernetes_Master
					
					



K8s ==> Kubernetes


		How to create a pod :::
		
			Adhoc Commands 
			
			Manifest file 
			
			
			Kubernetes Services ::
			
				NodePort :::
				
				1. Expose the pod to internet using NodePort Service.
				
						NodePort
		
		
***********************
Day 17 - 3rd Oct. 2023 
***********************	

				Controller Objects 
					Replication Controller 
					Replicasets
					Daemonset 
					Deployments 
				Services 
					ClusterIP
					NodePort
					LoadBalancer
				Volumes 
				Namespaces



				Controller Objects :::
					Replication Controller & Replicasets :::

						- Both Replication Controller & Replicasets are used to run a specific copy of pods.
						- replica = 5 
						- Replicaset is the latest version of Replication Controller.
						- Replication Controller uses equality based operator.
								label : Environment : dev 
						- ReplicaSet used set based operator
								label : Environment : {dev,qa,uat}
						- Replicaset can be automatically created with Deployment Controller Object.


					Daemonset :::
						- It is used to run a copy of pod in all the available/set of  Nodes.
						- Monitoring tool -- logging tool
						
					Deployment Controller Object  ::: 
						- Deploy the specific copy of pods 
						- Scale-up and scale-down 
						- Upgrade 
						- Rollback
						
					Application -- *.war_v1.0 -- mywebappImage:v1.0 / :v1.1 / :v1.2
					
					Deployment Strategy ==> Rolling Update.
					
						5 replicas of pod -- v1.0 
						
						1 of 5 --> update == once it is successful, 
						2 of 5 --> update ==
						
					
	
				Services 
					ClusterIP	
					NodePort
					LoadBalancer
					
				www.gmail.com 
				www.gmail.com/inbox
				www.gmail.com/trash
				www.gmail.com/spam
					
					
			Kubernetes Volumes :::::
			
				Stateful Application :::
				
					Kubernetes Volumes ::: are created at pod level. 
					
					emptyDir 
					hostpath
					config_map		==> Used to send the config parameters/details to the pods at run time.
					secret 			==> Used to send the secret/credentials to the pods at run time.
					
					pod == database ==> 
					
					Persistant Volume 
					Persistant Volume Claim
					
				3 tier application :
				
					Front_pod 
					appln_pod 
					backend_pod - database -->  
					
					
					Handling volumes from external storage servers ::
					
						AWS - EBS 								GBs of Volumes.  1tb 
						Az- AzDIsk
						GCP - GPersistantDisk
						storage medium 
						
				
					Persistant Volume 		::
					
						It is created by the storage Administration 
						This will abstract the process of volume procurement from developers view
						
					Persistant Volume Claim	
						This is created by the development Team --
						Claim form --> Amount of Volume, type of volume
		
					Persistant Volume Provisioning ::::
					
							- Static 		amount of volume, type/storage class of volume
							
							- Dyanamic 		type/storage class of volume 

Next :
	Namespaces :::



